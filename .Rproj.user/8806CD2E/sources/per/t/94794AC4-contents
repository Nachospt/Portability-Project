############################# DESCRIPTIVE ANALYSIS VICTIMS REPORT #############################
## The final funcion "F.Datatables" is formed by the following functions
setwd("C:\\Users\\nacho\\Desktop\\Estad√≠stica\\Datalab\\2017\\HACKFORGOOD_2\\")
DF1 = read.csv2("Reporte_Victimas.csv")
rbind(head(DF1), tail(DF1))

## F.DT.CATCHECK: Value check of factor variables
Columns = ncol(DF1)
F.DT.CATCHECK <- function(A) {
  for (z in 1:Columns) {
    if (is.factor(A[,z])) {
      print(data.frame(table(A[,z])))
    }
  }
}
  
## F.DT.NUMCHECK: Value check of numerical variables
F.DT.NUMCHECK <- function(A) {
  for (x in 1:Columns) {
    if (is.numeric(A[,x])) {
      print(colnames(A[x]))
      print(summary(A[,x]))
    }
  }
}

## Data visualization
library(ggplot2)
library(scales)

## This theme will be used in the graphs
theme_new <- theme(plot.background = element_rect(size = 1, color = muted("blue"), fill = "#B7EBD9"),
                   axis.text.y = element_text(colour = muted("red")),
                   axis.text.x = element_text(colour = muted("blue")),
                   panel.background = element_rect(fill = "pink"),
                   strip.background = element_rect(fill = "#800000"),
                   legend.position="none")

## F.DT.CATGRAPH: Automatically building bar graphs of cat. variables and variable of interest.
F.DT.CATGRAPH <- function(A, interest, fun) {
  for (z in 1:Columns) {
    if (is.factor(A[,z])) {
      if (nlevels(A[,z])<10) {
        graphname = paste(colnames(A[z]), "and", colnames(A[interest]), "bar plot")
        print(ggplot(DF1,aes(x = A[,z], y = A[11], fill = A[,z])) +
                geom_bar(stat = "summary", fun.y = sum) +
                scale_y_continuous(name=colnames(A[interest])) +
                scale_x_discrete(name=colnames(A[z])) +
                ggtitle(graphname) +
                theme_new)
      }
    }
  }
}

## Automatically building bar graphs of num.variables
F.DT.NUMGRAPH <- function(A) {
  for (z in 1:Columns) {
    if (is.numeric(A[,z])) {
        graphname = paste(colnames(A[z]), "histogram")
        print(ggplot(A, aes(x = A[,z])) +
                geom_histogram() +
                scale_y_continuous(name = "Count") +
                scale_x_continuous(name = colnames(A[z])) +
                ggtitle(graphname) +
                theme_new)
    }
  }
}

F.DT.BIPLOT <- function(X) {
  library(multbiplot)
  
}

## F.Datatables: final function
F.Datatables <- function(x, ..., interest = "none", fun = sum) {
  Columns = ncol(x)

  F.DT.CATCHECK(x)
  F.DT.NUMCHECK(x)
  F.DT.NUMGRAPH(x)
  if (interest != "none") {
    F.DT.CATGRAPH(x)
  }
## Size estimation
  size = nrow(x)*Columns*8/2^20
  print(paste(size, "approx MB"))
  if (size < 3000) {
    x.numeric <- apply(x,2,function (x) is.numeric(x))
    z = x[,x.numeric]
    rm(x)
    F.DT.BIPLOT(z)
  }
}
