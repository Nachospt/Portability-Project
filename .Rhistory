})
## Starting pattern
Pr_0 = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
a = sapply(1:25, FUN = function(x) (x + runif(1,-1,1) / 1.2 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
})
## Starting pattern
Pr_0 = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.2 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
}
## Starting pattern
Pr_0 = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.2 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
}
Pr_0A
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.2 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0[,ano.mes:= as.integer(ano.mes)]
Pr_0A = Pr_0A[Pr_1, on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
Pr_0A[,ano.mes:= as.integer(ano.mes)]
Pr_0A = Pr_0A[Pr_1, on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
View(Pr_0A)
View(Pr_0A)
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.2 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
View(Pr_0A)
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.5 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
View(Pr_0A)
abs(c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a)
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.5 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
abs(c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a)
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
View(Pr_0A)
head(Pr_0A)
tables()
Pr_0A = Pr_0A[Pr_1, .(1:4, "Referencia"), on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
head(Pr_0A)
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.5 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
abs(c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a)
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
Pr_0A = Pr_0A[Pr_1, .(ano.mes, Operador.Grupo, Importaciones, Referencia), on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
head(Pr_0A)
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.5 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
abs(c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a)
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
Pr_0A = Pr_0A[Pr_1, .(ano.mes, Operador.Grupo, Donante.Grupo, Importaciones, Referencia), on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
Pr_1 = Pr0A
Pr_2 = Pr_1
Pr_2$Exportaciones = apply(Pr_1, 1, FUN = function(x) {
TargetRow = intersect(which(Pr_1$Donante.Grupo == x["Operador.Grupo"]),
intersect(which(Pr_1$Operador.Grupo == x["Donante.Grupo"]),
which(Pr_1$ano.mes == x["ano.mes"])))
Pr_1$Importaciones[TargetRow]
})
#### cambio dataset
Porta.1 = Pr_2
Porta.3 = Pr_2
#
# Porta.3$Importaciones = sapply(Porta.1$Importaciones, function(x) {
#   x = x + x * runif(1,0,2)
#   x
# })
Porta.4 = as.data.table(Porta.3)
Porta.4$Referencia = Porta.1[,"Importaciones"]
Porta.5 = Porta.4
Porta_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia), Export = sum(Exportaciones)), by = list(ano.mes, Operador.Grupo)]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(as.factor(Porta.5$Operador.Grupo))) {
print(i)
print(z)
if (abs(Porta_F(Porta.5[ano.mes == z,])[Operador.Grupo == i,resta]) > 2)
{ Porta.5[ano.mes == z,][Operador.Grupo == i, "Importaciones" ] = Porta.5[ano.mes == z,][Operador.Grupo == i, "Importaciones"] * Porta_F(Porta.5[ano.mes == z,])[Operador.Grupo == i, Refer/Import]}
}
}
head(Porta.5)
Pr_1 = Porta.5
Pr_2 = Pr_1
Pr_2$Exportaciones = apply(Pr_1, 1, FUN = function(x) {
TargetRow = intersect(which(Pr_1$Donante.Grupo == x["Operador.Grupo"]),
intersect(which(Pr_1$Operador.Grupo == x["Donante.Grupo"]),
which(Pr_1$ano.mes == x["ano.mes"])))
Pr_1$Importaciones[TargetRow]
})
## 3.2 Removing self-portabilities
Pr_2 = Pr_2[!which(Pr_2$Donante.Grupo == Pr_2$Operador.Grupo),]
#### 4.Shiny Application ####
## 4.1 Adjustments
options(scipen=999)
zones = data.frame(c(1,1,1,1,2,2,2,2), c(0, 0, 300000, 0, 300000, 300000, 0, 0),
c(0, 300000, 300000, 0, 0, 300000, 0, 0),
c("#FD625E", "#FD625E", "#FD625E", "#FD625E", "#66CC00", "#66CC00", "#66CC00", "#66CC00"))
colnames(zones) = c("group", "Importaciones", "Exportaciones", "color")
runApp("C:\\Users\\a1380\\Desktop\\Portability Project")
## Simulation starting data
## Starting pattern
Pr_0A = data.table(
c(rep(1804,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
)
)
## Stable random series to transform starting pattern
a = sapply(1:25, FUN = function(x) runif(1,-1,1)) # Serie of 25 random numbers
for (i in c(1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1801, 1802, 1803, 1804, 1805, 1806)) {
print(i)
a = sapply(a, FUN = function(x) (x + runif(1,-1,1) / 1.1 )) # Modification of the random numbers
# Another random number is summed and it is divided but some number to make some decay.
Pr_0A = rbind(Pr_0A, data.table(
c(rep(i,25)),
c(rep("Movistar",5),
rep("Vodafone",5),
rep("Orange",5),
rep("Masmovil",5),
rep("Resto",5)),
c(rep(c("Movistar", "Vodafone", "Orange", "Masmovil", "Resto"), 5)),
abs(c(1, 6, 5, 7, 2,
4, 2, 7, 2, 3,
6, 4, 2, 4, 3,
8, 8, 7, 1, 2,
5, 4, 5, 4, 5
) + a)
))
}
colnames(Pr_0A) <- c("ano.mes","Operador.Grupo", "Donante.Grupo", "Importaciones")
Pr_0A[,ano.mes:= as.integer(ano.mes)]
Pr_0A = Pr_0A[Pr_1, .(ano.mes, Operador.Grupo, Donante.Grupo, Importaciones, Referencia), on = .(ano.mes, Operador.Grupo, Donante.Grupo)]
Pr_1 = Pr0A
Pr_2 = Pr_1
Pr_2$Exportaciones = apply(Pr_1, 1, FUN = function(x) {
TargetRow = intersect(which(Pr_1$Donante.Grupo == x["Operador.Grupo"]),
intersect(which(Pr_1$Operador.Grupo == x["Donante.Grupo"]),
which(Pr_1$ano.mes == x["ano.mes"])))
Pr_1$Importaciones[TargetRow]
})
#### cambio dataset
Porta.1 = Pr_2
Porta.3 = Pr_2
#
# Porta.3$Importaciones = sapply(Porta.1$Importaciones, function(x) {
#   x = x + x * runif(1,0,2)
#   x
# })
Porta.4 = as.data.table(Porta.3)
Porta.4$Referencia = Porta.1[,"Importaciones"]
Porta.5 = Porta.4
Porta_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia), Export = sum(Exportaciones)), by = list(ano.mes, Operador.Grupo)]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(as.factor(Porta.5$Operador.Grupo))) {
print(i)
print(z)
if (abs(Porta_F(Porta.5[ano.mes == z,])[Operador.Grupo == i,resta]) > 2)
{ Porta.5[ano.mes == z,][Operador.Grupo == i, "Importaciones" ] = Porta.5[ano.mes == z,][Operador.Grupo == i, "Importaciones"] * Porta_F(Porta.5[ano.mes == z,])[Operador.Grupo == i, Refer/Import]}
}
}
Pr_1 = Porta.5
Pr_2 = Pr_1
Pr_2$Exportaciones = apply(Pr_1, 1, FUN = function(x) {
TargetRow = intersect(which(Pr_1$Donante.Grupo == x["Operador.Grupo"]),
intersect(which(Pr_1$Operador.Grupo == x["Donante.Grupo"]),
which(Pr_1$ano.mes == x["ano.mes"])))
Pr_1$Importaciones[TargetRow]
})
## 3.2 Removing self-portabilities
Pr_2 = Pr_2[!which(Pr_2$Donante.Grupo == Pr_2$Operador.Grupo),]
#### 4.Shiny Application ####
## 4.1 Adjustments
options(scipen=999)
zones = data.frame(c(1,1,1,1,2,2,2,2), c(0, 0, 300000, 0, 300000, 300000, 0, 0),
c(0, 300000, 300000, 0, 0, 300000, 0, 0),
c("#FD625E", "#FD625E", "#FD625E", "#FD625E", "#66CC00", "#66CC00", "#66CC00", "#66CC00"))
colnames(zones) = c("group", "Importaciones", "Exportaciones", "color")
runApp("C:\\Users\\a1380\\Desktop\\Portability Project")
