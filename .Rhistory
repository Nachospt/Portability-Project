sapply(Porta.5, 1, FUN = function(x) print(x) )
sapply(Porta.5, FUN = function(x) print(x) )
sapply(Porta.5, 2, FUN = function(x) print(x) )
help(sapply)
help(split)
lapply(split(Porta.5), 2, FUN = function(x) print(x) )
lapply(split(Porta.5,by = 1:nrow(Porta.5)), 2, FUN = function(x) print(x) )
colnames(Porta.5)
condicion = lapply(split(Porta.5, by = as.factor(1:nrow(Porta.5))), 2, FUN = function(x) print(x) )
for (i in levels(Porta.5$Operador.Grupo)) {
Porta.5[which]
}
as.factor(1:nrow(Porta.5))
split(Porta.5, by = as.factor(1:nrow(Porta.5)))
Porta.5  %>%
apply(1:nrow(Porta.5), Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), FUN = Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), function(x) Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), FUN = function(x) Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 2, FUN = function(x) Porta.5[x,])
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 2, FUN = function(x) {Porta.5[x,]})
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 2, FUN = function(x){Porta.5[x,]})
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 2, FUN = function(x){Print("2")})
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 2, FUN = function(x){Porta.5[x,]})
Porta.5  %>%
apply(x = 1:nrow(Porta.5), 1, FUN = function(x){Porta.5[x,]})
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = function(x){Porta.5[x,]})
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = print("2"))
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = function(x) print(x))
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = function(x) {print(x)})
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), function(x) {print(x)})
Porta.5  %>%
sapply(1:nrow(Porta.5), function(x) {print(x)})
Porta.5  %>%
sapply(c(1:nrow(Porta.5)), function(x) {print(x)})
1:nrow(Porta.5)
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), function(x) {print(x)})
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = function(x, Porta.5){Porta.5[x,]})
Porta.5  %>%
sapply(x = 1:nrow(Porta.5), FUN = function(x, Porta.5){Porta.5[x,]}, Porta.5)
Porta.5  %>%
lapply(x = 1:nrow(Porta.5), FUN = function(x){Porta.5[x,1]})
Porta.5  %>%
lapply(x = 1:nrow(Porta.5), FUN = function(x){print(x)})
help("print")
print("x")
Porta.5  %>%
lapply(1:nrow(Porta.5), FUN = function(x){print(x)})
Porta.5  %>%
lapply(1:nrow(Porta.5), FUN = function(){print(x)})
Porta.5  %>%
lapply(1:nrow(Porta.5), FUN = print())
lapply(1:nrow(Porta.5), FUN = print())
lapply(x = 1:nrow(Porta.5), FUN = function(x){Porta.5[x,]})
lapply(1:nrow(Porta.5), FUN = function(x){Porta.5[x,]})
Porta.5[1,Referencia-Importaciones]
head(Porta.5)
help("abs")
Porta.5_F = Porta.4
source('C:/Users/a1380/Desktop/Portability Project/Extra_material.R', echo=TRUE)
Porta.5_F = Porta.4
Porta.5 = Porta.4[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
a = 0
for (i in 1:nrow(Porta.5)) {
if (abs(Porta.5[,Referencia-Importaciones]) > 2)
{Porta.5_F[Operador.Grupo == Porta.5[i,"Operador.Grupo"]] * Porta.5[, Referencia / Importaciones]}
a = a + 1
print(a)
}
a = 0
for (i in 1:nrow(Porta.5)) {
if (abs(Porta.5[,Referencia-Importaciones]) > 2)
{Porta.5_F[Operador.Grupo == Porta.5[i,"Operador.Grupo"]] * Porta.5[, referencia / Importaciones]}
a = a + 1
print(a)
}
Porta.5_F = Porta.4
Porta.5 = Porta.4[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
a = 0
for (i in 1:nrow(Porta.5)) {
if (abs(Porta.5[i,Referencia-Importaciones]) > 2)
{Porta.5_F[Operador.Grupo == Porta.5[i,"Operador.Grupo"]] * Porta.5[i,Referencia/Importaciones]}
a = a + 1
print(a)
}
colnames(Porta.5)
Porta.7 = x %>% [, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
Porta.7 = .[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
Porta.4 %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
head(Porta.4)
colnames(Porta.4)
colnames(Porta.5)
attributes(as.factor(1:5))
nrow(as.factor(1:5))
max(as.factor(1:5))
attr(as.factor(1:5))
length(as.factor(1:5))
Porta.5_F = Porta.4
Porta.5 = Porta.4
Porta.5_F = Porta.5 %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Donante.Grupo]}
Porta.5_F(Porta.5)
for (i in 1:length(as.factor(Porta.5_F$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
a = 0
for (i in 1:length(as.factor(Porta.5_F$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
a = 0
for (i in 1:length(as.factor(Porta.5_F$Operador.Grupo))) {
a = a + 1
print(a)
}
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Operador.Grupo]}
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
head(Porta.5)
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
Porta.5[Operador.Grupo == Porta.5_F(Porta.5[1,"Operador.Grupo"]), Importaciones]
Porta.5[2,3]
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,"Operador.Grupo"], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5[i,"Operador.Grupo"]), Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,"Operador.Grupo"], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,"Operador.Grupo"], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[3,Operador.Grupo], Importaciones]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[3,Operador.Grupo], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[3,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[3,Refer/Import]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] + 2
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] =  Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] + 2
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] + 2000
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[3,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[3,Refer/Import]}
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[3,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[3,Refer/Import]
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]
i
Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]
Porta.5_F(Porta.5)[i,Refer/Import]
Porta.5_F(Porta.5)[1,Refer/Import]
Porta.5_F(Porta.5)[2,Refer/Import]
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Operador.Grupo]}
a = 0
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
a = a + 1
print(a)
}
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] * Porta.5_F(Porta.5)[i,Refer/Import]}
print(i)
}
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3}
print(i)
}
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Operador.Grupo]}
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3}
print(i)
}
head(Porta.5)
Porta.5$Importaciones
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ #Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3
Print(3)}
print(i)
}
for (i in 1:length(as.factor(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ #Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3
print(3)}
print(i)
}
for (i in 1:length(levels(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ #Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3
print(3)}
print(i)
}
for (i in 1:length(levels(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ #Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3
print(3)}
print(i)
}
for (i in 1:length(levels(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], Importaciones] = 3
print(3)}
print(i)
}
for (i in 1:length(levels(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], "Importaciones"] = 3
print(3)}
print(i)
}
Porta.5
Porta.5[,Importaciones]
Porta.5[2,Importaciones]
Porta.5[Importaciones == 3,Importaciones]
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Operador.Grupo]}
for (i in 1:length(levels(Porta.5$Operador.Grupo))) {
if (abs(Porta.5_F(Porta.5)[i,resta]) > 2)
{ Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], "Importaciones"] = Porta.5[Operador.Grupo == Porta.5_F(Porta.5)[i,Operador.Grupo], "Importaciones"] * Porta.5_F(Porta.5)[i,Refer/Import]
print(3)}
print(i)
}
Porta.5
Porta.5_F(Porta.5)
View(join(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5_F((Porta.5))))
View(cbind(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5_F((Porta.5))))
Porta.5_F((Porta.5)))
View(cbind(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5_F(Porta.5)))
Porta.5_F(Porta.4)
Porta.5_F(Porta.5)
View(cbind(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5))
View(cbind(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5))
View(cbind(Porta.4, Porta.5))
View(cbind(Porta.5_F(Porta.4), Porta.5_F(Porta.5)))
class(Porta.3)
head(Porta.5)
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .(Operador.Grupo, ano.mes)]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5)[ano.mes == z][i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5)[i,Refer/Import]}
print(i)
print(z)
}
}
levels(Porta.5$Operador.Grupo)
class(levels(Porta.5$Operador.Grupo))
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .(Operador.Grupo, ano.mes)]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
# if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
# { Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
Porta.5[ano.mes == "1804"][Operador.Grupo == "Vodafone", "Importaciones"]
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), on = .(Operador.Grupo, ano.mes)]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
Porta.5_F(Porta.5)
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .(Operador.Grupo, ano.mes)]}
Porta.5_F(Porta.5)
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
for  (z in levels(as.factor(Porta.5$ano.mes))) {print(z)}
Porta.5_F(Porta.5[ano.mes == 1804])[3,resta]
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .(Operador.Grupo, ano.mes)]}
for  (z in Porta.5$ano.mes) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == z])[i,resta]) > 2)
{ Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == z][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
for  (z in Porta.5$ano.mes) {print(z)}
Porta.5_F(Porta.5)
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
}
}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
}
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
print(i)
print(z)
}
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == z])[i,Refer/Import]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,Refer/Import]}
print(i)
print(z)
}
}
View(cbind(Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),]), Porta.5))
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,Refer/Import]}
print(i)
print(z)
}
}
head(Porta.5_F(Porta.5))
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,Refer/Import]}
}
}
Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"]
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
?data.table
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), on = .("Operador.Grupo", "ano.mes")]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .("Operador.Grupo", "ano.mes"), on=Operador.Grupo]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .("Operador.Grupo", "ano.mes")]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
Porta.4 = as.data.table(Porta.3[which(Porta.3$ano.mes == 1804),])
Porta.4$Referencia = Porta.1[which(Porta.1$ano.mes == 1804),"Importaciones"]
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .("Operador.Grupo", "ano.mes")]}
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
Porta.5_F(Porta.1)
Porta.5_F(Porta.3)
head(Porta.3)
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = .("Operador.Grupo")]}
Porta.5_F(Porta.3)
Porta.5_F(Porta.5)
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = Operador.Grupo]}
Porta.5_F(Porta.5)
Porta.5 = Porta.4
Porta.5_F = function(x) {x %>%
.[, .( resta = sum(Importaciones)-sum(Referencia), Import = sum(Importaciones), Refer = sum(Referencia)), by = list(ano.mes, Operador.Grupo)]}
Porta.5_F(Porta.5)
for  (z in levels(as.factor(Porta.5$ano.mes))) {
for (i in levels(Porta.5$Operador.Grupo)) {
print(i)
print(z)
if (abs(Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[i,resta]) > 2)
{ Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] = Porta.5[ano.mes == as.numeric(z)][Operador.Grupo == i, "Importaciones"] * Porta.5_F(Porta.5[ano.mes == as.numeric(z)])[Operador.Grupo == i,Refer/Import]}
}
}
Porta.5[,by = ano.mes, on= as.numeric(3)]
Porta.5[, on= as.numeric(3)]
Porta.5[, on= ano.mes]
Porta.3[, on= ano.mes]
as.data.table(Porta.3)
as.data.table(Porta.3)[,on=ano.mes]
as.data.table(Porta.3)[ano.mes == 1804,on=ano.mes]
